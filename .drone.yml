---
kind: pipeline
type: kubernetes
name: ci/cd

image_pull_secrets:
  - GCR_CREDENTIALS

steps:
- name: Test Backend (TODO)
  image: python:3.7.3-slim
  commands:
  - echo 'DO TESTS THERE'
  when:
    branch:
      include:
        - feature/*
        - master
        - dev
    event:
      include:
        - push
        - pull_request

- name: Build&Push Backend
  image: plugins/gcr
  settings:
    context: backend
    dockerfile: backend/Dockerfile
    registry: eu.gcr.io
    repo: mind-blowing-company/${DRONE_REPO}-backend
    cache_from:
      - eu.gcr.io/mind-blowing-company/${DRONE_REPO}-backend:${DRONE_SOURCE_BRANCH/\//-}
    json_key:
      from_secret: GCR_JSON
    tags:
        - ${DRONE_SOURCE_BRANCH/\//-}
        - ${DRONE_SOURCE_BRANCH/\//-}-${DRONE_COMMIT_SHA:0:8}
  when:
    branch:
      include:
        - feature/*
        - master
        - dev
    event:
      include:
        - push

- name: Spec kostil Frontend (TODO)
  image: node:10.16.3-alpine
  environment:
    ENV_FILE:
      from_secret: ENV_FILE
  commands:
  - echo "$ENV_FILE" > frontend/.env
  when:
    branch:
      include:
        - feature/*
        - master
        - dev
    event:
      include:
        - push
        - pull_request

- name: Test Frontend (TODO)
  image: node:10.16.3-alpine
  commands:
  - echo 'DO TESTS THERE'
  when:
    branch:
      include:
        - feature/*
        - master
        - dev
    event:
      include:
        - push
        - pull_request

- name: Build&Push Frontend
  image: plugins/gcr
  settings:
    context: frontend
    dockerfile: frontend/Dockerfile
    registry: eu.gcr.io
    repo: mind-blowing-company/${DRONE_REPO}-frontend
    cache_from:
      - eu.gcr.io/mind-blowing-company/${DRONE_REPO}-frontend:${DRONE_SOURCE_BRANCH/\//-}
    json_key:
      from_secret: GCR_JSON
    tags:
        - ${DRONE_SOURCE_BRANCH/\//-}
        - ${DRONE_SOURCE_BRANCH/\//-}-${DRONE_COMMIT_SHA:0:8}
  when:
    branch:
      include:
        - feature/*
        - master
        - dev
    event:
      include:
        - push

- name: DeployProd
  image: pelotech/drone-helm3
  environment:
    DOAMIN:
      from_secret: DOMAIN
  settings:
    helm_command: upgrade
    chart: ./deployment/helm
    release: awbp
    namespace: awsome
    api_server: https://kubernetes.default.svc
    kubernetes_token:
      from_secret: KUBER_TOKEN
    values:
      - FrontEnd.image.tag=${DRONE_SOURCE_BRANCH/\//-}-${DRONE_COMMIT_SHA:0:8}
      - BackEnd.image.tag=${DRONE_SOURCE_BRANCH/\//-}-${DRONE_COMMIT_SHA:0:8}
      - FrontEnd.domain=${DOMAIN}
      - BackEnd.domain=api.${DOMAIN}
